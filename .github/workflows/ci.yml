name: CI

on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: nikhilsingh
          POSTGRES_PASSWORD: new_password
          POSTGRES_DB: transcript_ai_insights
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U nikhilsingh -d transcript_ai_insights"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10

    env:
      DATABASE_URL: postgresql://nikhilsingh:new_password@localhost:5432/transcript_ai_insights
      TEST_DATABASE_URL: postgresql://nikhilsingh:new_password@localhost:5432/transcript_ai_insights_test
      OPENAI_API_KEY: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install OS tools (psql client)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends postgresql-client

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov mypy black isort

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U nikhilsingh -d transcript_ai_insights && break
            sleep 1
          done

      - name: Prepare databases (create test DB + enable pg_trgm)
        run: |
          psql "postgresql://nikhilsingh:new_password@localhost:5432/postgres" -c "CREATE DATABASE transcript_ai_insights_test;" || true
          psql "$DATABASE_URL" -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
          psql "$TEST_DATABASE_URL" -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"

      - name: Run Alembic migrations (app DB)
        run: alembic upgrade head

      - name: Run Alembic migrations (test DB)
        run: DATABASE_URL="$TEST_DATABASE_URL" alembic upgrade head

      - name: Lint & Type Check
        run: |
          black --check .
          isort --check-only .
          mypy app

      - name: Run tests with coverage
        run: pytest -q --cov=app --cov=main --cov-report=term-missing

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: call-analytics:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

